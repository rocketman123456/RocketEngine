# this is the build file for project Rocket
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.13.0)
project(Rocket LANGUAGES C CXX ASM)

# target
add_library(RocketEngine SHARED "")
set_target_properties(RocketEngine PROPERTIES OUTPUT_NAME "RocketEngine")
set_target_properties(RocketEngine PROPERTIES LIBRARY_OUTPUT_DIRECTORY "build/macosx/x86_64/debug")
target_include_directories(RocketEngine PRIVATE
    RocketEngine
    ThirdParty/glad/include
    External/Darwin/include
)
target_compile_definitions(RocketEngine PRIVATE
    RK_MACOS
    RK_DEBUG
)
set_property(TARGET RocketEngine PROPERTY C_STANDARD 99)
if(MSVC)
    target_compile_options(RocketEngine PRIVATE $<$<COMPILE_LANGUAGE:C>:-TP>)
endif()
target_compile_options(RocketEngine PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-arch x86_64>
    $<$<COMPILE_LANGUAGE:CXX>:-arch x86_64>
    $<$<COMPILE_LANGUAGE:C>:-mmacosx-version-min=11.2>
    $<$<COMPILE_LANGUAGE:CXX>:-mmacosx-version-min=11.2>
    $<$<COMPILE_LANGUAGE:C>:-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk>
    $<$<COMPILE_LANGUAGE:CXX>:-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk>
)
target_compile_features(RocketEngine PRIVATE c_std_99)
target_compile_features(RocketEngine PRIVATE cxx_std_17)
if(MSVC)
    target_compile_options(RocketEngine PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(RocketEngine PRIVATE -O0)
endif()
target_link_libraries(RocketEngine PRIVATE
    m
    dl
    pthread
    z
)
target_link_directories(RocketEngine PRIVATE
    External/Darwin/lib
)
target_link_options(RocketEngine PRIVATE
    -arch x86_64
    -mmacosx-version-min=11.2
    -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk
    -stdlib=libc++
)
target_sources(RocketEngine PRIVATE
    RocketEngine/Debug/MemLeak.cpp
)

# target
add_custom_target(test)

# target
add_executable(memory_leak_test "")
set_target_properties(memory_leak_test PROPERTIES OUTPUT_NAME "memory_leak_test")
set_target_properties(memory_leak_test PROPERTIES RUNTIME_OUTPUT_DIRECTORY "build/macosx/x86_64/debug")
add_dependencies(memory_leak_test RocketEngine)
target_include_directories(memory_leak_test PRIVATE
    RocketEngine
    ThirdParty/glad/include
    External/Darwin/include
)
target_compile_definitions(memory_leak_test PRIVATE
    RK_MACOS
    RK_DEBUG
)
set_property(TARGET memory_leak_test PROPERTY C_STANDARD 99)
if(MSVC)
    target_compile_options(memory_leak_test PRIVATE $<$<COMPILE_LANGUAGE:C>:-TP>)
endif()
target_compile_options(memory_leak_test PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-arch x86_64>
    $<$<COMPILE_LANGUAGE:CXX>:-arch x86_64>
    $<$<COMPILE_LANGUAGE:C>:-mmacosx-version-min=11.2>
    $<$<COMPILE_LANGUAGE:CXX>:-mmacosx-version-min=11.2>
    $<$<COMPILE_LANGUAGE:C>:-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk>
    $<$<COMPILE_LANGUAGE:CXX>:-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk>
)
target_compile_features(memory_leak_test PRIVATE c_std_99)
target_compile_features(memory_leak_test PRIVATE cxx_std_17)
if(MSVC)
    target_compile_options(memory_leak_test PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(memory_leak_test PRIVATE -O0)
endif()
target_link_libraries(memory_leak_test PRIVATE
    RocketEngine
    m
    dl
    pthread
    z
)
target_link_directories(memory_leak_test PRIVATE
    External/Darwin/lib
    build/macosx/x86_64/debug
)
target_link_options(memory_leak_test PRIVATE
    -arch x86_64
    -mmacosx-version-min=11.2
    -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk
    -stdlib=libc++
)
target_sources(memory_leak_test PRIVATE
    UnitTest/memory_leak_test.cpp
)

# target
add_library(glad SHARED "")
set_target_properties(glad PROPERTIES OUTPUT_NAME "glad")
set_target_properties(glad PROPERTIES LIBRARY_OUTPUT_DIRECTORY "build/macosx/x86_64/debug")
target_include_directories(glad PRIVATE
    RocketEngine
    ThirdParty/glad/include
    External/Darwin/include
)
target_compile_definitions(glad PRIVATE
    RK_MACOS
    RK_DEBUG
)
set_property(TARGET glad PROPERTY C_STANDARD 99)
if(MSVC)
    target_compile_options(glad PRIVATE $<$<COMPILE_LANGUAGE:C>:-TP>)
endif()
target_compile_options(glad PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-arch x86_64>
    $<$<COMPILE_LANGUAGE:CXX>:-arch x86_64>
    $<$<COMPILE_LANGUAGE:C>:-mmacosx-version-min=11.2>
    $<$<COMPILE_LANGUAGE:CXX>:-mmacosx-version-min=11.2>
    $<$<COMPILE_LANGUAGE:C>:-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk>
    $<$<COMPILE_LANGUAGE:CXX>:-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk>
)
target_compile_features(glad PRIVATE c_std_99)
target_compile_features(glad PRIVATE cxx_std_17)
if(MSVC)
    target_compile_options(glad PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(glad PRIVATE -O0)
endif()
target_link_libraries(glad PRIVATE
    z
)
target_link_directories(glad PRIVATE
    External/Darwin/lib
)
target_link_options(glad PRIVATE
    -arch x86_64
    -mmacosx-version-min=11.2
    -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk
    -stdlib=libc++
)
target_sources(glad PRIVATE
    ThirdParty/glad/src/glad.c
)

# target
add_executable(glfw_test "")
set_target_properties(glfw_test PROPERTIES OUTPUT_NAME "glfw_test")
set_target_properties(glfw_test PROPERTIES RUNTIME_OUTPUT_DIRECTORY "build/macosx/x86_64/debug")
add_dependencies(glfw_test glad)
target_include_directories(glfw_test PRIVATE
    RocketEngine
    ThirdParty/glad/include
    External/Darwin/include
)
target_compile_definitions(glfw_test PRIVATE
    RK_MACOS
    RK_DEBUG
)
set_property(TARGET glfw_test PROPERTY C_STANDARD 99)
if(MSVC)
    target_compile_options(glfw_test PRIVATE $<$<COMPILE_LANGUAGE:C>:-TP>)
endif()
target_compile_options(glfw_test PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-arch x86_64>
    $<$<COMPILE_LANGUAGE:CXX>:-arch x86_64>
    $<$<COMPILE_LANGUAGE:C>:-mmacosx-version-min=11.2>
    $<$<COMPILE_LANGUAGE:CXX>:-mmacosx-version-min=11.2>
    $<$<COMPILE_LANGUAGE:C>:-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk>
    $<$<COMPILE_LANGUAGE:CXX>:-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk>
    $<$<COMPILE_LANGUAGE:C>:-framework Cocoa>
    $<$<COMPILE_LANGUAGE:CXX>:-framework Cocoa>
    $<$<COMPILE_LANGUAGE:C>:-framework IOKit>
    $<$<COMPILE_LANGUAGE:CXX>:-framework IOKit>
    $<$<COMPILE_LANGUAGE:C>:-framework CoreVideo>
    $<$<COMPILE_LANGUAGE:CXX>:-framework CoreVideo>
    $<$<COMPILE_LANGUAGE:CXX>:-framework Cocoa>
    $<$<COMPILE_LANGUAGE:CXX>:-framework IOKit>
    $<$<COMPILE_LANGUAGE:CXX>:-framework CoreVideo>
)
target_compile_features(glfw_test PRIVATE c_std_99)
target_compile_features(glfw_test PRIVATE cxx_std_17)
if(MSVC)
    target_compile_options(glfw_test PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(glfw_test PRIVATE -O0)
endif()
target_link_libraries(glfw_test PRIVATE
    glfw3
    glad
    z
)
target_link_directories(glfw_test PRIVATE
    External/Darwin/lib
    build/macosx/x86_64/debug
)
target_link_options(glfw_test PRIVATE
    -arch x86_64
    -mmacosx-version-min=11.2
    -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.3.sdk
    -stdlib=libc++
)
target_sources(glfw_test PRIVATE
    UnitTest/glfw_test.cpp
)

